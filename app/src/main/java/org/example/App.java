///*
// * This source file was generated by the Gradle 'init' task
// */
//package org.example;
//
//import org.example.entities.Ticket;
//import org.example.entities.Train;
//import org.example.entities.User;
//import org.example.services.UserBookingService;
//import java.security.SecureRandom;
//import java.io.IOException;
//import java.util.*;
//
//public class App {
//    public String getGreeting() {
//        return "Hello from App!";
//    }
//        public static void main(String[] args) throws IOException {
//            Scanner sc = new Scanner(System.in);
//            int option = 1;
//            UserBookingService userService;
//            try {
//                userService = new UserBookingService();
//
//            } catch (IOException e) {
//                e.printStackTrace();
//                System.out.println("Something went wrong");
//                return;
//            }
//            while (option != 7) {
//                System.out.println("Choose option");
//                System.out.println("1. Sign up");
//                System.out.println("2. Login");
//                System.out.println("3. Fetch Bookings");
//                System.out.println("4. Search Trains");
//                System.out.println("5. Book a Seat");
//                System.out.println("6. Cancel my Booking");
//                System.out.println("7. Exit the App");
//                if (!sc.hasNextLine()) {
//                    System.out.println("No more input; exiting.");
//                    break;
//                }
//                String line = sc.nextLine().trim();
//                // 2) try parse integer
//                try {
//                    option = Integer.parseInt(line);
//                } catch (NumberFormatException nfe) {
//                    System.out.println("Invalid choice, please enter a number 1â€“7.");
//                    continue;
//                }
//
//                switch (option) {
//                    case 1: {
//                        System.out.println("Enter your name");
//                        String signUpName = sc.nextLine();
//                        System.out.println("Enter your email");
//                        String signUpEmail = sc.nextLine();
//                        System.out.println("Enter your password");
//                        String signUpPassword = sc.nextLine();
//                        String prefix =signUpName.toUpperCase().substring(0,signUpName.contains(" ") ?signUpName.indexOf(" "):signUpName.length());
//                        int uniqueIdGenerate=(new SecureRandom()).nextInt(1000);
//                        String signUpUserID = prefix+uniqueIdGenerate;
//                        User newSignUpUser = new User(signUpName, signUpPassword, signUpEmail, signUpUserID);
//                        assert userService != null;
//                        boolean ok = userService.signUpUser(newSignUpUser);
//                        if (ok) {
//                            System.out.println("Congratulations! You have successfully registered!");
//                            System.out.println("Your ID is: " + signUpUserID);
//                        } else {
//                            System.out.println("Signup failed, please try again.");
//                        }
//                        break;
//                    }
//                    case 2: {
//                        boolean isNotSuceess = true;
//                        while (isNotSuceess) {
//                            System.out.println("Enter your userId");
//                            String userId = sc.nextLine();
//                            System.out.println("Enter your password");
//                            String password = sc.nextLine();
//                            Optional<User> loggedInUser = userService.loginUser(userId, password);
//                            if (loggedInUser.isPresent()) {
//                                System.out.println("you have successfully logged in");
//                                userService = new UserBookingService(loggedInUser.get());
//                                isNotSuceess = false;
//                            } else {
//                                System.out.println("Try again with correct credentials");
//                                System.out.println("If you forgot your credentials, please enter yes or no");
//                                System.out.println("Yes I forgot my credentials, I will try again later.");
//                                System.out.println("No, I want to try again now");
//                                String forgotPassword = sc.nextLine().trim();
//                                if (forgotPassword.equalsIgnoreCase("yes")) {
//                                    isNotSuceess = false;
//                                }
//                            }
//
//
//
//                        }
//                       userService=new UserBookingService();
//                        System.out.println("\n\n\n");
//                        break;
//                         }
//
//                    case 3: {
//
//                    }
//
//
//                    case 4: {
//                        boolean tryAgianBooking=true;
//                        while (tryAgianBooking) {
//                            System.out.println("Please enter your source station");
//                            String sourceStation = sc.nextLine();
//                            System.out.println("Please enter your destination station");
//                            String destinationStation = sc.nextLine();
//                            System.out.println("Please enter your date of travel");
//                            String dateOfTravel = sc.nextLine();
//                            List<Train> foundTrainList = userService.searchAllTrains(sourceStation, destinationStation);
//                            if (foundTrainList == null) {
//                                System.out.println("No Train found,try different Source or Destination");
//                                System.out.println("Do you want to try again with different Source or Destination?");
//                                System.out.println("Yes\nNo");
//                                String tryAgain = sc.nextLine().trim();
//                                if (tryAgain.equalsIgnoreCase("yes")) {
//                                    tryAgianBooking = true;
//                                } else tryAgianBooking = false;
//                            } else {
//                                System.out.println("\n\n\n");
//                                System.out.println("Here is the list of trains:");
//                                for (Train train : foundTrainList) {
//                                    System.out.println(train.getTrainId());
//                                    System.out.println(train.getTrainNo());
//                                    System.out.println("Route of the train is:");
//                                    int start = train.getStations().get(sourceStation);
//                                    int end = train.getStations().get(destinationStation);
//                                    for (Map.Entry<String, Integer> m : train.getStations().entrySet()) {
//                                        if (m.getValue() >= start && m.getValue() <= end) {
//                                            System.out.println(m.getKey());
//                                        }
//                                    }
//                                }//for
//                                System.out.println("Do you want to try again with another Source or Destination?");
//                                String tryAgain = sc.nextLine().trim();
//                                if (tryAgain.equalsIgnoreCase("yes")) {
//                                    tryAgianBooking = true;
//                                } else tryAgianBooking = false;
//                                System.out.println("\n\n\n");
//
//                            }
//                            System.out.println("\n\n\n");
//                        }
//                        break;
//                    }
//                    case 5: {
//
//                            System.out.println("You have not logged in, please login or sign up first.");
//                            boolean isNotSuceess = true;
//                            while (isNotSuceess&&userService.getUser()==null) {
//                                System.out.println("Enter your userId");
//                                String userId = sc.nextLine();
//                                System.out.println("Enter your password");
//                                String password = sc.nextLine();
//                                Optional<User> loggedInUser = userService.loginUser(userId, password);
//                                if (loggedInUser.isPresent()) {
//                                    System.out.println("you have successfully logged in");
//                                    userService = new UserBookingService(loggedInUser.get());
//                                    isNotSuceess = false;
//                                } else {
//                                    System.out.println("Try again with correct credentials");
//                                    System.out.println("If you forgot your credentials, please enter yes or no");
//                                    System.out.println("Yes I forgot my credentials, I will try again later.");
//                                    System.out.println("No, I want to try again now");
//                                    String forgotPassword = sc.nextLine().trim();
//                                    if (forgotPassword.equalsIgnoreCase("yes")) {
//                                        isNotSuceess = false;
//                                    }
//                                }
//
//
//
//                            }//while
//                              boolean tryAgianBooking = true;
//                             while (tryAgianBooking) {
//                                 if (userService.getUser()!=null) {
//                                     System.out.println("Please enter your source station");
//                                     String sourceStation = sc.nextLine();
//                                     System.out.println("Please enter your destination station");
//                                     String destinationStation = sc.nextLine();
//                                     System.out.println("Please enter your date of travel");
//                                     String dateOfTravel = sc.nextLine();
//                                     Train foundTrain=userService.searchTrain(sourceStation,destinationStation);
//                                     if(foundTrain==null) {
//                                         System.out.println("No Train found,try different Source or Destination");
//                                         System.out.println("Do you want to try again with different Source or Destination?");
//                                         System.out.println("Yes\nNo");
//                                         String tryAgain=sc.nextLine().trim();
//                                         if(tryAgain.equalsIgnoreCase("yes")) {
//                                             tryAgianBooking=true;
//                                         }
//                                         else tryAgianBooking=false;
//                                     }
//                                     else {
//                                         try {
//                                             Ticket bookedTicket=userService.bookTicket(foundTrain,sourceStation,destinationStation,dateOfTravel);
//                                             System.out.println("You have successfully Booked Ticket, Your PNR is:"+bookedTicket.getTicketId());
//                                             System.out.println("Do You want to see your Ticket Details");
//                                             System.out.println("Yes\nNo");
//                                             String showTicket=sc.nextLine().trim();
//                                             if (showTicket.equalsIgnoreCase("yes")) {
//                                                 bookedTicket.printTicketDetails();
//                                             }
//                                             System.out.println("Thank you for booking your Ticket");
//                                             System.out.println("Do you want to book another ticket");
//                                             System.out.println("Yes\nNo");
//                                             String bookAnother=sc.nextLine().trim();
//                                             if (bookAnother.equalsIgnoreCase("yes")) {
//                                                 tryAgianBooking=true;
//                                             }
//                                             else tryAgianBooking=false;
//                                         }
//                                         catch (Exception e) {
//                                             e.printStackTrace();
//                                             System.out.println(e.getMessage());
//                                             System.out.println("Try again");
//                                         }
//
//
//
//                                     }
//
//                                 }
//
//
//
//                                 else  {
//                                     System.out.println("You have not logged in, We cannot book your train ticket.");
//                                 }
//                             }
//
//
//
//                            userService=null;
//                            System.out.println("\n\n\n");
//                            break;
//
//
//                    }//case 5
//                    case 6: {}
//
//            }
//
//        }}}





































package org.example;

import org.example.entities.Ticket;
import org.example.entities.Train;
import org.example.entities.User;
import org.example.services.UserBookingService;

import java.io.IOException;
import java.security.SecureRandom;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.Scanner;

import static org.example.App.handleLogOut;

public class App {

    public String getGreeting() {
        return "Hello from App!";
    }

    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        int option = 0;
        UserBookingService userService;

        try {
            userService = new UserBookingService();
        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("Something went wrong initializing the booking service.");
            return;
        }

        while (option != 7) {
            printMenu(userService,1);
            if (!sc.hasNextLine()) {
                System.out.println("No more input; exiting.");
                break;
            }

            String input = sc.nextLine().trim();
            try {
                option = Integer.parseInt(input);
            } catch (NumberFormatException nfe) {
                System.out.println("Invalid choice, please enter a number 1â€“7.");
                continue;
            }
            if (userService.getUser()!=null) {
                option+=2;
            }
            switch (option) {
                case 1:
                    if(userService.getUser()!=null)
                        System.out.println("Please choose a valid option between 1 and 6.");
                    else
                    handleSignUp(sc,userService);
                    break;
                case 2:
                    if(userService.getUser()!=null)
                        System.out.println("Please choose a valid option between 1 and 6.");
                    else
                    handleLogin(sc, userService);
                    break;
                case 3:
                    // TODO: Fetch Bookings implementation
                    userService=handleFetchingTickets(sc,userService);
                    break;
                case 4:
                    handleSearchTrains(sc, userService);
                    break;
                case 5:
                    userService = handleBooking(sc, userService);
                    break;
                case 6:
                    userService=handleBookingCancelation(sc, userService);
                    break;
                case 7:
                    System.out.println("Exiting the App. Goodbye!");
                    break;
                case 8:
                    if(userService.getUser()==null)
                        System.out.println("Please choose a valid option between 1 and 7.");
                    else
                        handleLogOut(sc, userService);
                    break;
                default:
                    System.out.println("Please choose a valid option between 1 and 7.");
            }
        }

        sc.close();
    }

    private static void printMenu(UserBookingService userService,int i) {
        System.out.println("\nChoose option:");
        if (userService.getUser()==null) {
            System.out.println((i++)+". Sign up");
            System.out.println((i++)+". Login");
        }
        System.out.println((i++)+". Fetch Bookings");
        System.out.println((i++)+". Search Trains");
        System.out.println((i++)+". Book a Seat");
        System.out.println((i++)+". Cancel my Booking");
        System.out.println((i++)+". Exit the App");
        if(userService.getUser()!=null)
        System.out.println((i++)+". Logout");
        System.out.print("Your choice: ");
    }

    private static void handleSignUp(Scanner sc, UserBookingService userService) {
        System.out.print("Enter your name: ");
        String name = sc.nextLine();
        System.out.print("Enter your email: ");
        String email = sc.nextLine();
        System.out.print("Enter your password: ");
        String password = sc.nextLine();

        String prefix = name.toUpperCase()
                .substring(0, name.contains(" ") ? name.indexOf(" ") : name.length());
        int uniqueId = new SecureRandom().nextInt(1000);
        String userId = prefix + uniqueId;

        User newUser = new User(name, password, email, userId);
        boolean ok = userService.signUpUser(newUser);
        if (ok) {
            System.out.println("Congratulations! You have successfully registered!");
            System.out.println("Your User ID is: " + userId);
        } else {
            System.out.println("Signup failed, please try again.");
        }
    }

    private static UserBookingService handleLogin(Scanner sc, UserBookingService userService)
            throws IOException {
        boolean loggedIn = false;
        //UserBookingService service = userService;

        while (!loggedIn) {
            System.out.print("Enter your userId: ");
            String userId = sc.nextLine();
            System.out.print("Enter your password: ");
            String password = sc.nextLine();

            Optional<User> userOpt = userService.loginUser(userId, password);
            if (userOpt.isPresent()) {
                System.out.println("You have successfully logged in.");
                userService.setUser(userOpt.get());
                loggedIn = true;
            } else {
                System.out.println("Login failed. Try again.");
                System.out.print("Forgot credentials? (yes/no): ");
                String forgot = sc.nextLine().trim();
                if (forgot.equalsIgnoreCase("yes")) {
                    break;
                }
            }
        }

        return userService;
    }

    private static void handleSearchTrains(Scanner sc, UserBookingService userService) throws IOException {
        boolean tryAgain = true;

        while (tryAgain) {
            System.out.print("Please enter your source station: ");
            String source = sc.nextLine();
            System.out.print("Please enter your destination station: ");
            String destination = sc.nextLine();

            List<Train> trains = userService.searchAllTrains(source, destination);
            if (trains == null || trains.isEmpty()) {
                System.out.println("No trains found. Try different source/destination.");
            } else {
                System.out.println("\nHere is the list of trains:");
                for (Train t : trains) {
                    System.out.println("Train ID: " + t.getTrainId());
                    System.out.println("Train No: " + t.getTrainNo());
                    System.out.println("Route:");
                    int start = t.getStations().get(source);
                    int end = t.getStations().get(destination);
                    t.getStations().entrySet().stream()
                            .filter(e -> e.getValue() >= start && e.getValue() <= end)
                            .forEach(e -> System.out.println("  - " + e.getKey()));
                }
            }

            System.out.print("Search again? (yes/no): ");
            String again = sc.nextLine().trim();
            tryAgain = again.equalsIgnoreCase("yes");
            System.out.println();
        }
    }

    private static UserBookingService handleBooking(Scanner sc, UserBookingService userService)
            throws IOException {
        if (userService.getUser() == null) {
            System.out.println("You are not logged in. Please login or sign up first.");
            userService = handleLogin(sc, userService);
        }

        boolean tryBooking = true;
        while (tryBooking && userService.getUser() != null) {
            System.out.print("Source station: ");
            String source = sc.nextLine();
            System.out.print("Destination station: ");
            String destination = sc.nextLine();
            System.out.print("Date of travel (YYYY-MM-DD): ");
            String date = sc.nextLine();

            Train train = userService.searchTrain(source, destination);
            if (train == null) {
                System.out.println("No train found. Try again.");
            } else {
                try {
                    Ticket ticket = userService.bookTicket(train, source, destination, date);
                    System.out.println("Ticket booked! PNR: " + ticket.getTicketId());
                    System.out.print("View ticket details? (yes/no): ");
                    if (sc.nextLine().trim().equalsIgnoreCase("yes")) {
                        ticket.printTicketDetails();
                    }
                } catch (Exception e) {
                    System.out.println("Booking failed: " + e.getMessage());
                }
            }

            System.out.print("Book another ticket? (yes/no): ");
            tryBooking = sc.nextLine().trim().equalsIgnoreCase("yes");
            System.out.println();
        }

        return userService;
    }



    public static UserBookingService handleLogOut(Scanner sc,UserBookingService userService) throws IOException {
        System.out.print("Logging out? (yes/no): ");
        String logOut=sc.nextLine().trim();
        if (logOut.equalsIgnoreCase("yes"))
        userService.setUser(null);
        return userService;
    }


    public static UserBookingService handleFetchingTickets(Scanner sc,UserBookingService userService) throws IOException {
        if (userService.getUser() == null) {
            System.out.println("You are not logged in. Please login or sign up first.");
            userService = handleLogin(sc, userService);
        }
        boolean tryFethingAgain = true;
        while (tryFethingAgain&&userService.getUser() != null) {
            System.out.print("Please enter your Ticket PNR  : ");
            String ticketPNR = sc.nextLine();
            Ticket fetchedTicket=userService.fetchTicket(ticketPNR);
            if (fetchedTicket != null) {
                userService.showBookingDetails(fetchedTicket);
                System.out.println("Do you want to check another ticket? (yes/no):");
            }
            else  {
                System.out.println("Ticket PNR not found in your booking history.");
                System.out.println("Do you want to try again with correct PNR? (yes/no): ");
            }
            tryFethingAgain = sc.nextLine().trim().equalsIgnoreCase("yes");
        }
        return userService;
    }




    public static UserBookingService handleBookingCancelation(Scanner sc,UserBookingService userService) throws IOException {
        if (userService.getUser() == null) {
            System.out.println("You are not logged in. Please login or sign up first.");
            userService = handleLogin(sc, userService);
        }
        boolean tryCancelAgain = true;
        while (tryCancelAgain&&userService.getUser() != null) {
            System.out.print("Please enter your Ticket PNR  : ");
            String ticketPNR = sc.nextLine();
            Ticket fetchedTicket=userService.fetchTicket(ticketPNR);
            if (fetchedTicket != null) {
                userService.showBookingDetails(fetchedTicket);
                System.out.println("Are you sure to cancel it? (yes/no):");
                String  cancel = sc.nextLine();
                if (cancel.equalsIgnoreCase("yes")) {
                    userService.cancelTicket(fetchedTicket);
                    System.out.println("Ticket cancelled!\n\n");
                }
                else{
                    System.out.println("Ticket cancellation Failed!\n\n");
                }
                System.out.println("Do you want to cancel another ticket? (yes/no):");
            }
            else  {
                System.out.println("Ticket PNR not found in your booking history.");
                System.out.println("Do you want to try again with correct PNR? (yes/no): ");
            }
            tryCancelAgain = sc.nextLine().trim().equalsIgnoreCase("yes");
        }
        return userService;
    }
}
